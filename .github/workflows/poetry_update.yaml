name: Poetry Update

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 6 1 * *'

jobs:
  all:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      - name: Update the project
        run: poetry update
      - name: Run tests
        run: |
          source .venv/bin/activate
          task tests
      - name: Get changed files
        id: changes
        uses: tj-actions/changed-files@v35
        with:
          files: 'poetry.lock'
      - name: Configure gituser
        if: success() && steps.changes.outputs.any_changed == 'true'
        uses: fregante/setup-git-user@v2
      - name: Push update commit from the new branch
        if: success() && steps.changes.outputs.any_changed == 'true'
        run: |
          git checkout -b poetry-update-${{ github.run_id }}
          git add poetry.lock
          git commit -m 'chore(deps): update poetry.lock'
          git push origin HEAD
      - name: Create Pull Request
        if: success() && steps.changes.outputs.any_changed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          branch: poetry-update-${{ github.run_id }}
          title: 'chore(deps): update poetry.lock'
          commit-message: 'chore(deps): update poetry.lock'
          body: 'This PR was automatically created after running `poetry update`.'
          base: main
      - name: Workflow failure notification
        uses: JasonEtco/create-an-issue@v2
        if: failure()
        with:
          filename: .github/poetry_update_failure.md
